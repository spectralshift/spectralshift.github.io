{"version":3,"file":"static/js/191.5687b42b.chunk.js","mappings":"0LAKA,MAsDA,EAtDgBA,KAwCZC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,GAAIC,UACtBJ,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGL,GAAI,CAAEM,GAAI,GAAIJ,SAxC3B,CACjB,CACEK,MAAO,qBACPC,YAAa,8HACbC,SAAU,+BACbC,MAAO,WAET,CACKH,MAAO,2BACPC,YAAa,0EACbC,SAAU,6BACbC,MAAO,gBAER,CACIH,MAAO,gBACPC,YAAa,iGACbC,SAAU,+BACbC,MAAO,WAER,CACIH,MAAO,uBACPC,YAAa,8CACbC,SAAU,+BACbC,MAAO,MAER,CACIH,MAAO,2BACPC,YAAa,qHACbC,SAAU,+BACbC,MAAO,aAER,CACIH,MAAO,qBACPC,YAAa,yJACbC,SAAU,mCAOME,KAAI,CAACC,EAAMC,KACvBf,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEf,UAC9BJ,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,IAAKN,KAD0BC,Q,iGC5ChD,MAmFA,EAnFaM,IAAmD,IAAlD,MAAEZ,EAAK,YAAEC,EAAW,SAAEC,EAAQ,MAAEC,EAAQ,IAAIS,EACxD,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GACrCC,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJC,UAAW,EACX3B,GAAI,CACF4B,MAAO,OACPC,OAAQ,QACRC,QAAS,OACTC,SAAU,SACVC,SAAU,WACVC,WAAY,oBACZC,OAAQxB,EAAQ,UAAY,WAE9ByB,aAAcA,IAAMd,GAAa,GACjCe,aAAcA,IAAMf,GAAa,GACjCgB,QApBgBC,KACd5B,GACFa,EAASb,EACX,EAiBuBR,SAAA,EAGrBJ,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,GAAI,CACF4B,MAAO,MACPC,OAAQ,OACRC,QAAS,OACTS,WAAY,SACZC,eAAgB,SAChBC,QAAS,SACTvC,UAEFJ,EAAAA,EAAAA,KAAA,OACE4C,IAAKjC,EACLkC,IAAKpC,EACLqC,MAAO,CAAEC,SAAU,OAAQC,UAAW,OAAQC,UAAW,gBAK7DtB,EAAAA,EAAAA,MAAC1B,EAAAA,EAAG,CACFC,GAAI,CACF4B,MAAO,MACPC,OAAQ,OACRC,QAAS,OACTkB,cAAe,SACf/C,QAAS,EACT+B,SAAU,YACV9B,SAAA,EAEFJ,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CACTC,QAAQ,KACRlD,GAAI,CACFgC,SAAU,WACVmB,IAAK/B,EAAY,MAAQ,MACzBgC,UAAWhC,EAAY,gBAAkB,mBACzCa,WAAY,qBACZ/B,SAEDK,KAEHT,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CACTC,QAAQ,QACRlD,GAAI,CACFqD,QAASjC,EAAY,EAAI,EACzBkC,WAAYlC,EAAY,UAAY,SACpCa,WAAY,6BACZD,SAAU,WACVmB,IAAK,QACLjD,SAEDM,SAGC,C","sources":["pages/CivIdle.js","pages/Tile.js"],"sourcesContent":["import React from 'react';\r\nimport { Grid, Box } from '@mui/material';\r\nimport Tile from './Tile';\r\n\r\n\r\nconst CivIdle = () => {\r\nconst civIdleTiles = [\r\n    { \r\n      title: 'Science Calculator', \r\n      description: \"Quickly calculate how long it will take to generate (x) science at a certain rate. Useful for knowing how long to idle for!\",\r\n      imageSrc: '/images/cividle/sci-calc.png',\r\n\t  route: 'science'\r\n    },\r\n\t{ \r\n      title: 'GP Efficiency Calculator', \r\n      description: \"Find out when is the best time to rebirth during your Empire Value run!\",\r\n      imageSrc: '/images/cividle/gp-eff.png',\r\n\t  route: 'gp-efficient'\r\n    },\r\n\t\t{ \r\n      title: 'Idle Era Time', \r\n      description: \"Want to do a lot of short runs? This tells you the time it takes to get to each era while afk!\",\r\n      imageSrc: '/images/cividle/idle-era.png',\r\n\t  route: 'eratime'\r\n    },\r\n\t\t{ \r\n      title: 'Goods: Empire Values', \r\n      description: \"A list of the EV of every item in the game.\",\r\n      imageSrc: '/images/cividle/ev-value.png',\r\n\t  route: 'ev'\r\n    },\r\n\t\t{ \r\n      title: 'Product Chain Calculator', \r\n      description: \"Figuring out how many buildings and products you need is hard! Here is a calculator that should help calculate it!\",\r\n      imageSrc: '/images/cividle/prodcalc.png',\r\n\t  route: 'chaincalc'\r\n    },\r\n\t\t{ \r\n      title: 'Workers vs Science', \r\n      description: \"Should I go for science buildings or should I go for workers to get science? Covers Aparments and Condos vs Schools, Research Labs, and Computer Labs.\",\r\n      imageSrc: '/images/cividle/sci-worker.png'\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ padding: 4 }}>\r\n      <Grid container spacing={3} sx={{ mb: 4 }}>\r\n        {civIdleTiles.map((tile, index) => (\r\n          <Grid item xs={12} sm={6} md={4} key={index}>\r\n            <Tile {...tile} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      \r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CivIdle;","import React, { useState } from 'react';\r\nimport { Paper, Typography, Box } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Tile = ({ title, description, imageSrc, route = '' }) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = () => {\r\n    if (route) {\r\n      navigate(route);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      elevation={3}\r\n      sx={{\r\n        width: '100%',\r\n        height: '150px',\r\n        display: 'flex',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        transition: 'all 0.2s ease-out',\r\n        cursor: route ? 'pointer' : 'default',\r\n      }}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n      onClick={handleClick}\r\n    >\r\n      {/* Image Section */}\r\n      <Box\r\n        sx={{\r\n          width: '33%',\r\n          height: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          bgcolor: 'white',\r\n        }}\r\n      >\r\n        <img \r\n          src={imageSrc} \r\n          alt={title}\r\n          style={{ maxWidth: '100%', maxHeight: '100%', objectFit: 'contain' }}\r\n        />\r\n      </Box>\r\n\r\n      {/* Content Section */}\r\n      <Box\r\n        sx={{\r\n          width: '67%',\r\n          height: '100%',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          padding: 2,\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h6\"\r\n          sx={{\r\n            position: 'absolute',\r\n            top: isHovered ? '2px' : '50%',\r\n            transform: isHovered ? 'translateY(0)' : 'translateY(-50%)',\r\n            transition: 'all 0.2s ease-out',\r\n          }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            opacity: isHovered ? 1 : 0,\r\n            visibility: isHovered ? 'visible' : 'hidden',\r\n            transition: 'opacity 0.2s ease-out 0.1s',\r\n            position: 'absolute',\r\n            top: '40px',\r\n          }}\r\n        >\r\n          {description}\r\n        </Typography>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Tile;"],"names":["CivIdle","_jsx","Box","sx","padding","children","Grid","container","spacing","mb","title","description","imageSrc","route","map","tile","index","item","xs","sm","md","Tile","_ref","isHovered","setIsHovered","useState","navigate","useNavigate","_jsxs","Paper","elevation","width","height","display","overflow","position","transition","cursor","onMouseEnter","onMouseLeave","onClick","handleClick","alignItems","justifyContent","bgcolor","src","alt","style","maxWidth","maxHeight","objectFit","flexDirection","Typography","variant","top","transform","opacity","visibility"],"sourceRoot":""}