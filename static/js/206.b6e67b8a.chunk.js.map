{"version":3,"file":"static/js/206.b6e67b8a.chunk.js","mappings":"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","sources":["components/PageHeader.js","../node_modules/@mui/material/internal/svg-icons/ArrowDownward.js","../node_modules/@mui/material/TableSortLabel/tableSortLabelClasses.js","../node_modules/@mui/material/TableSortLabel/TableSortLabel.js","../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/d3-dsv/src/tsv.js","../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/dsv.js","pages/cividle/EVValues.js"],"sourcesContent":["// src/components/PageHeader.js\r\nimport React from 'react';\r\nimport { Typography, Box } from '@mui/material';\r\n\r\nconst PageHeader = ({ title, description }) => {\r\n  return (\r\n    <Box sx={{ mb: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      {description && (\r\n        <Typography \r\n          variant=\"subtitle1\" \r\n          sx={{ \r\n            mb: 3, \r\n            fontStyle: 'italic',\r\n            color: 'text.secondary',\r\n            borderLeft: '4px solid',\r\n            borderColor: 'primary.main',\r\n            pl: 2\r\n          }}\r\n        >\r\n          {description}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableSortLabelUtilityClass(slot) {\n  return generateUtilityClass('MuiTableSortLabel', slot);\n}\nconst tableSortLabelClasses = generateUtilityClasses('MuiTableSortLabel', ['root', 'active', 'icon', 'iconDirectionDesc', 'iconDirectionAsc']);\nexport default tableSortLabelClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"active\", \"children\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"];\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport ButtonBase from '../ButtonBase';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport capitalize from '../utils/capitalize';\nimport tableSortLabelClasses, { getTableSortLabelUtilityClass } from './tableSortLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction,\n    active\n  } = ownerState;\n  const slots = {\n    root: ['root', active && 'active'],\n    icon: ['icon', `iconDirection${capitalize(direction)}`]\n  };\n  return composeClasses(slots, getTableSortLabelUtilityClass, classes);\n};\nconst TableSortLabelRoot = styled(ButtonBase, {\n  name: 'MuiTableSortLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.active && styles.active];\n  }\n})(({\n  theme\n}) => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'inherit',\n  alignItems: 'center',\n  '&:focus': {\n    color: (theme.vars || theme).palette.text.secondary\n  },\n  '&:hover': {\n    color: (theme.vars || theme).palette.text.secondary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 0.5\n    }\n  },\n  [`&.${tableSortLabelClasses.active}`]: {\n    color: (theme.vars || theme).palette.text.primary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 1,\n      color: (theme.vars || theme).palette.text.secondary\n    }\n  }\n}));\nconst TableSortLabelIcon = styled('span', {\n  name: 'MuiTableSortLabel',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, styles[`iconDirection${capitalize(ownerState.direction)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  fontSize: 18,\n  marginRight: 4,\n  marginLeft: 4,\n  opacity: 0,\n  transition: theme.transitions.create(['opacity', 'transform'], {\n    duration: theme.transitions.duration.shorter\n  }),\n  userSelect: 'none'\n}, ownerState.direction === 'desc' && {\n  transform: 'rotate(0deg)'\n}, ownerState.direction === 'asc' && {\n  transform: 'rotate(180deg)'\n}));\n\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\nconst TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableSortLabel'\n  });\n  const {\n      active = false,\n      children,\n      className,\n      direction = 'asc',\n      hideSortIcon = false,\n      IconComponent = ArrowDownwardIcon\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    active,\n    direction,\n    hideSortIcon,\n    IconComponent\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(TableSortLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    component: \"span\",\n    disableRipple: true,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [children, hideSortIcon && !active ? null : /*#__PURE__*/_jsx(TableSortLabelIcon, {\n      as: IconComponent,\n      className: clsx(classes.icon),\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   * @default false\n   */\n  active: PropTypes.bool,\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The current sort direction.\n   * @default 'asc'\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Hide sort icon when active is false.\n   * @default false\n   */\n  hideSortIcon: PropTypes.bool,\n  /**\n   * Sort icon to use.\n   * @default ArrowDownwardIcon\n   */\n  IconComponent: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableSortLabel;","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","import React, { useState, useEffect } from 'react';\r\nimport { Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TableSortLabel } from '@mui/material';\r\nimport { csv } from 'd3-fetch';\r\nimport PageHeader from '../../components/PageHeader';\r\n\r\nconst PAGE_TITLE = \"Empire Value Table\";\r\nconst PAGE_DESCRIPTION = \"A simple sortable table showing the Value of all items in the game.\"\r\n\r\n\r\nconst EVValues = () => {\r\n  const [data, setData] = useState([]);\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('Resource');\r\n\r\n  useEffect(() => {\r\n    csv('/data/evValues.csv').then(data => {\r\n      const parsedData = data.map(row => ({\r\n        ...row,\r\n        Value: parseInt(row.Value, 10)\r\n      }));\r\n      setData(parsedData);\r\n    });\r\n  }, []);\r\n\r\n  const handleRequestSort = (property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const sortedData = React.useMemo(() => {\r\n    const comparator = (a, b) => {\r\n      if (b[orderBy] < a[orderBy]) {\r\n        return order === 'desc' ? -1 : 1;\r\n      }\r\n      if (b[orderBy] > a[orderBy]) {\r\n        return order === 'desc' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    };\r\n    return [...data].sort(comparator);\r\n  }, [data, order, orderBy]);\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 3, maxWidth: 800, mx: 'auto' }}>\r\n      <PageHeader title={PAGE_TITLE} description={PAGE_DESCRIPTION} />\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {['Resource', 'Tier', 'Value'].map((headCell) => (\r\n                <TableCell key={headCell}>\r\n                  <TableSortLabel\r\n                    active={orderBy === headCell}\r\n                    direction={orderBy === headCell ? order : 'asc'}\r\n                    onClick={() => handleRequestSort(headCell)}\r\n                  >\r\n                    {headCell}\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedData.map((row) => (\r\n              <TableRow key={row.Resource}>\r\n                <TableCell>{row.Resource}</TableCell>\r\n                <TableCell>{row.Tier}</TableCell>\r\n                <TableCell>{row.Value.toLocaleString()}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default EVValues;"],"names":["_ref","title","description","_jsxs","Box","sx","mb","children","_jsx","Typography","variant","gutterBottom","fontStyle","color","borderLeft","borderColor","pl","createSvgIcon","d","getTableSortLabelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableSortLabelRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","active","theme","cursor","display","justifyContent","flexDirection","alignItems","vars","palette","text","secondary","concat","tableSortLabelClasses","icon","opacity","primary","TableSortLabelIcon","capitalize","direction","_ref2","_extends","fontSize","marginRight","marginLeft","transition","transitions","create","duration","shorter","userSelect","transform","React","inProps","ref","useDefaultProps","className","hideSortIcon","IconComponent","ArrowDownwardIcon","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","component","disableRipple","as","EOL","EOF","objectConverter","columns","Function","map","i","JSON","stringify","join","inferColumns","rows","columnSet","Object","forEach","row","column","push","pad","value","width","s","length","Array","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","f","t","N","I","n","eof","eol","token","c","j","slice","replace","preformatBody","formatValue","formatRow","Date","test","parse","convert","object","customConverter","format","formatBody","formatRows","csv","dsv","csvParse","tsv","tsvParse","responseText","response","ok","Error","status","statusText","dsvParse","input","init","arguments","undefined","fetch","then","EVValues","data","setData","useState","order","setOrder","orderBy","setOrderBy","useEffect","parsedData","Value","parseInt","sortedData","sort","comparator","a","b","Paper","elevation","p","maxWidth","mx","PageHeader","TableContainer","Table","TableHead","TableRow","headCell","TableCell","TableSortLabel","onClick","handleRequestSort","property","TableBody","Resource","Tier","toLocaleString"],"sourceRoot":""}