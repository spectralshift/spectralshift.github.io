{"version":3,"file":"static/js/542.685e954b.chunk.js","mappings":"qQAKA,MA0FA,EA1FwBA,KACtB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,CAAC,GAAI,GAAI,MACvCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,CAAC,IAAK,IAAK,OACvCG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,MAE/BK,EAAS,CAAC,cAAe,gBAAiB,kBAgB1CC,EAAeA,CAACC,EAAWC,KAC/B,MAAMC,GAAmBC,EAAAA,EAAAA,IAAqBH,EAAWC,GACzDJ,EAAUK,EAAiB,EAG7B,OACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAW,EAAGC,GAAI,CAAEC,EAAG,EAAGC,SAAU,IAAKC,GAAI,QAASC,SAAA,EAC3DC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,gCACtCC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACT,GAAI,CAAEU,GAAI,EAAGC,QAAS,mBAAoBV,EAAG,EAAGW,aAAc,GAAIR,SACpE,CAAC,EAAG,EAAG,GAAGS,KAAKC,IACdjB,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAeC,WAAW,SAASlB,GAAI,CAAEU,GAAI,GAAIN,SAAA,EACxEC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEjB,UACvBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,YAAYe,WAAW,SAAQlB,SAAEb,EAAOuB,QAE9DT,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAEjB,UACtBC,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CACRC,KAAK,SACLC,MAAOzC,EAAO8B,GACdY,SAAWC,GAhCCC,EAACd,EAAOe,KAChC,MAAMpC,EAAY,IAAIT,GACtBS,EAAUqB,GAASe,EACnB5C,EAAUQ,GACVD,EAAaC,EAAWN,EAAM,EA4BDyC,CAAkBd,EAAOa,EAAEG,OAAOL,OACnDlB,QAAQ,WACRwB,KAAK,QACLC,WAAS,EACTC,WAAY,CAAEC,KAAM,YAGxB7B,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAEjB,UACtBC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CACLV,MAAOtC,EAAM2B,GACbY,SAAWC,GAnCAS,EAACtB,EAAOuB,KAC/B,MAAM3C,EAAW,IAAIP,GACrBO,EAASoB,GAASuB,EAClBjD,EAASM,GACTF,EAAaR,EAAQU,EAAS,EA+BD0C,CAAiBtB,EAAOa,EAAEG,OAAOL,OAClDlB,QAAQ,WACRwB,KAAK,QACLC,WAAS,EAAA5B,SAER,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKS,KAAKyB,IAC9BjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAQ,CAAYd,MAAOa,EAAKlC,SAAEkC,GAApBA,WAxBUxB,QA+BrCT,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACT,GAAI,CAAEW,QAAS,gBAAiBV,EAAG,EAAGW,aAAc,EAAG4B,MAAO,wBAAyBpC,SACzFf,IAAWA,EAAOoD,OACjB5C,EAAAA,EAAAA,MAAA6C,EAAAA,SAAA,CAAAtC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,aACtCP,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,WAAW,SAAQd,SAAA,EAC7CC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACI,MAAI,EAAAf,UACRC,EAAAA,EAAAA,KAACsC,EAAAA,EAAc,OAEjB9C,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAACI,MAAI,EAACC,IAAE,EAAAhB,SAAA,EACXP,EAAAA,EAAAA,MAACS,EAAAA,EAAU,CAAAF,SAAA,CAAC,iBACGC,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACmC,UAAU,OAAO5C,GAAI,CAAEwC,MAAO,UAAWlB,WAAY,QAASlB,SAAEf,EAAOwD,QAAY,aAEvGhD,EAAAA,EAAAA,MAACS,EAAAA,EAAU,CAACC,QAAQ,QAAOH,SAAA,CAAC,SACnBf,EAAOyD,sBAMtBzC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACkC,MAAM,QAAOpC,UAChB,OAANf,QAAM,IAANA,OAAM,EAANA,EAAQoD,QAAS,kCAIlB,C,kkBCzFC7C,EAAuBA,CAACZ,EAAQG,KAC3C,MAAM4D,EAAkB,CACtB,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,KACL,EAAK,OAGAC,EAAeC,EAAcC,GAAiBlE,EAAO6B,KAAI,CAACY,EAAOX,IACtEqC,WAAW1B,GAASsB,EAAgB5D,EAAM2B,MAG5C,GAAIkC,GAAiB,GAAKI,MAAMH,IAAiBG,MAAMF,GACrD,MAAO,CAAET,MAAO,4CAGlB,MAAMY,EAAcC,KAAKC,IAAI,EAAGD,KAAKE,OAAON,EAAgBD,GAAgBD,IAI5E,MAAO,CACLH,MAAOQ,EACPP,SAJeW,EAAWJ,GAK3B,EAGUK,EAAwBA,CAACC,EAAWC,EAAWC,EAAaC,KACvE,MAQMC,EAAwBZ,WAAWU,GARjB,CACtB,EAAK,KACL,EAAK,EACL,EAAK,IACL,EAAK,IACL,EAAK,KAGiEC,GAClEE,EAAiBb,WAAWS,GAE5BK,EAAiB,GACjBC,EAAiB,GACjBC,EAAY,GAElB,IAAIC,EAAkB,EAClBC,EAAS,EAGb,IAAK,IAAIC,EAAI,EAAGA,GAAK,IAAMA,GAAK,GAAI,CAClC,MAAMC,EAAmB,GAAKjB,KAAKkB,IAAIF,EAAG,GAAMP,EAAwB,KAClEU,EAAKH,GAAKC,EAAkBP,GAC5BU,EAAKH,EAAkBP,EAE7BC,EAAeU,KAAK,CAAEL,IAAGM,EAAGH,IAC5BP,EAAeS,KAAK,CAAEL,IAAGM,EAAGF,IAExBJ,EAAI,MAAQ,GACdH,EAAUQ,KAAK,CAAEL,IAAGP,wBAAuBQ,kBAAiBE,KAAIC,OAI9DJ,EAAI,GAAKG,EAAKJ,GAA8B,IAApBD,IAC1BA,EAAkBE,GAGpBD,EAASI,CACX,CAGA,GAAIL,EAAkB,EAAG,CAEvBC,EAAS,EACT,IAAK,IAAIC,EAAKF,EAAkB,GAAKE,EAAIF,EAAkB,GAAIE,IAAK,CAClE,MACMG,EAAKH,GADc,GAAKhB,KAAKkB,IAAIF,EAAG,GAAMP,EAAwB,KACtCC,GAElC,GAAIS,EAAKJ,EAAQ,CACfD,EAAkBE,EAAI,EACtB,KACF,CAEAD,EAASI,CACX,CACF,CAEA,MAAO,CACLR,iBACAC,iBACAW,aAAcT,EACdD,YACAW,YAAa,CAAEnB,YAAWC,YAAWC,cAAaC,UACnD,EAKUiB,EAAc/B,GAClBgC,EAAQC,MAAM,EAAG,IAAIpE,KAAIqE,IAC9B,MAAMC,EAAc7B,KAAK8B,KAAKF,EAAIG,QAAUrC,GAC5C,MAAO,IACFkC,EACHI,YAAa7B,EAAW0B,GACzB,IAIC1B,EAAc8B,IAClB,MAAMC,EAAOlC,KAAKmC,MAAMF,EAAU,OAC5BG,EAAQpC,KAAKmC,MAAOF,EAAU,MAAS,MACvCI,EAAUrC,KAAKmC,MAAOF,EAAU,KAAQ,IACxCK,EAAmBL,EAAU,GAE7BM,EAAQ,GAOd,OALIL,EAAO,GAAGK,EAAMlB,KAAK,GAADmB,OAAIN,EAAI,MAC5BE,EAAQ,GAAGG,EAAMlB,KAAK,GAADmB,OAAIJ,EAAK,MAC9BC,EAAU,GAAGE,EAAMlB,KAAK,GAADmB,OAAIH,EAAO,OAClCC,EAAmB,GAAsB,IAAjBC,EAAME,SAAcF,EAAMlB,KAAK,GAADmB,OAAIF,EAAgB,MAEvEC,EAAMG,KAAK,IAAI,C,4OCtHjB,SAASC,EAAwBC,GACtC,OAAOC,EAAAA,EAAAA,IAAqB,cAAeD,EAC7C,CACA,MACA,GADwBE,EAAAA,EAAAA,GAAuB,cAAe,CAAC,OAAQ,eAAgB,QAAS,WAAY,UAAW,UAAW,a,eCDlI,MAAMC,EAAY,CAAC,YAAa,YAAa,QAAS,UAAW,iBAAkB,wBAAyB,OAAQ,WAAY,aAsC1HC,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAY,CACtCC,kBAAmBC,IAAQC,EAAAA,EAAAA,GAAsBD,IAAkB,YAATA,EAC1DE,KAAM,cACNV,KAAM,OACNW,kBAzB+BA,CAACC,EAAOC,KACvC,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMD,EAAWE,OAASH,EAAOG,MAAOF,EAAWG,SAAWJ,EAAOI,SAAUH,EAAWI,gBAAkBL,EAAOM,QAAQ,GAiBvHd,EAKlBe,IAAA,IAAC,MACFC,EAAK,WACLP,GACDM,EAAA,OAAKE,EAAAA,EAAAA,GAAS,CAAC,EAAGD,EAAME,WAAWC,MAAO,CACzCC,QAAS,OACTC,eAAgB,aAChB1G,WAAY,SACZ2G,SAAU,WACVC,eAAgB,OAChBC,UAAW,GACXC,WAAY,EACZC,cAAe,EACfC,UAAW,aACXC,WAAY,WACVnB,EAAWI,gBAAkB,CAC/BgB,YAAa,GACbC,aAAc,IACbrB,EAAWG,SAAW,CACvBmB,aAAc,aAAFxC,QAAgByB,EAAMgB,MAAQhB,GAAOiB,QAAQrB,SACzDsB,eAAgB,eACf,CACD,UAAW,CACTX,eAAgB,OAChBY,iBAAkBnB,EAAMgB,MAAQhB,GAAOiB,QAAQG,OAAOC,MAEtD,uBAAwB,CACtBF,gBAAiB,gBAGrB,CAAC,KAAD5C,OAAM+C,EAAgBC,WAAa,CACjCJ,gBAAiBnB,EAAMgB,KAAO,QAAHzC,OAAWyB,EAAMgB,KAAKC,QAAQO,QAAQC,YAAW,OAAAlD,OAAMyB,EAAMgB,KAAKC,QAAQG,OAAOM,gBAAe,MAAMC,EAAAA,EAAAA,IAAM3B,EAAMiB,QAAQO,QAAQI,KAAM5B,EAAMiB,QAAQG,OAAOM,iBACxL,CAAC,KAADnD,OAAM+C,EAAgBO,eAAiB,CACrCV,gBAAiBnB,EAAMgB,KAAO,QAAHzC,OAAWyB,EAAMgB,KAAKC,QAAQO,QAAQC,YAAW,YAAAlD,OAAWyB,EAAMgB,KAAKC,QAAQG,OAAOM,gBAAe,OAAAnD,OAAMyB,EAAMgB,KAAKC,QAAQG,OAAOU,aAAY,OAAOH,EAAAA,EAAAA,IAAM3B,EAAMiB,QAAQO,QAAQI,KAAM5B,EAAMiB,QAAQG,OAAOM,gBAAkB1B,EAAMiB,QAAQG,OAAOU,gBAGrR,CAAC,KAADvD,OAAM+C,EAAgBC,SAAQ,WAAW,CACvCJ,gBAAiBnB,EAAMgB,KAAO,QAAHzC,OAAWyB,EAAMgB,KAAKC,QAAQO,QAAQC,YAAW,YAAAlD,OAAWyB,EAAMgB,KAAKC,QAAQG,OAAOM,gBAAe,OAAAnD,OAAMyB,EAAMgB,KAAKC,QAAQG,OAAOW,aAAY,OAAOJ,EAAAA,EAAAA,IAAM3B,EAAMiB,QAAQO,QAAQI,KAAM5B,EAAMiB,QAAQG,OAAOM,gBAAkB1B,EAAMiB,QAAQG,OAAOW,cAEjR,uBAAwB,CACtBZ,gBAAiBnB,EAAMgB,KAAO,QAAHzC,OAAWyB,EAAMgB,KAAKC,QAAQO,QAAQC,YAAW,OAAAlD,OAAMyB,EAAMgB,KAAKC,QAAQG,OAAOM,gBAAe,MAAMC,EAAAA,EAAAA,IAAM3B,EAAMiB,QAAQO,QAAQI,KAAM5B,EAAMiB,QAAQG,OAAOM,mBAG5L,CAAC,KAADnD,OAAM+C,EAAgBO,eAAiB,CACrCV,iBAAkBnB,EAAMgB,MAAQhB,GAAOiB,QAAQG,OAAOY,OAExD,CAAC,KAADzD,OAAM+C,EAAgBW,WAAa,CACjCC,SAAUlC,EAAMgB,MAAQhB,GAAOiB,QAAQG,OAAOe,iBAEhD,CAAC,QAAD5D,OAAS6D,EAAAA,EAAe1C,OAAS,CAC/B2C,UAAWrC,EAAMtG,QAAQ,GACzB4I,aAActC,EAAMtG,QAAQ,IAE9B,CAAC,QAAD6E,OAAS6D,EAAAA,EAAeG,QAAU,CAChCC,WAAY,IAEd,CAAC,MAADjE,OAAOkE,EAAAA,EAAoB/C,OAAS,CAClC2C,UAAW,EACXC,aAAc,GAEhB,CAAC,MAAD/D,OAAOkE,EAAAA,EAAoBF,QAAU,CACnC1B,YAAa,IAEf,CAAC,MAADtC,OAAOmE,EAAAA,EAAoBhD,OAAS,CAClCiD,SAAU,MAEVlD,EAAWE,OAAS,CACtB,CAACK,EAAM4C,YAAYC,GAAG,OAAQ,CAC5BrC,UAAW,SAEZf,EAAWE,QAASM,EAAAA,EAAAA,GAAS,CAC9BO,UAAW,GAEXC,WAAY,EACZC,cAAe,GACdV,EAAME,WAAW4C,MAAO,CACzB,CAAC,MAADvE,OAAOmE,EAAAA,EAAoBhD,KAAI,SAAS,CACtCqD,SAAU,aAEX,IAsIH,EArI8BC,EAAAA,YAAiB,SAAkBC,EAASC,GACxE,MAAM3D,GAAQ4D,EAAAA,EAAAA,GAAgB,CAC5B5D,MAAO0D,EACP5D,KAAM,iBAEF,UACF+D,GAAY,EAAK,UACjB/H,EAAY,KAAI,MAChBsE,GAAQ,EAAK,QACbC,GAAU,EAAK,eACfC,GAAiB,EAAK,sBACtBwD,EAAqB,KACrBC,EAAO,WACPC,SAAUC,EAAY,UACtBC,GACElE,EACJmE,GAAQC,EAAAA,EAAAA,GAA8BpE,EAAOT,GACzC8E,EAAUZ,EAAAA,WAAiBa,EAAAA,GAC3BC,EAAed,EAAAA,SAAc,KAAM,CACvCrD,MAAOA,GAASiE,EAAQjE,QAAS,EACjCE,oBACE,CAAC+D,EAAQjE,MAAOA,EAAOE,IACrBkE,EAAcf,EAAAA,OAAa,OACjCgB,EAAAA,EAAAA,IAAkB,KACZZ,GACEW,EAAYE,SACdF,EAAYE,QAAQjC,OAIxB,GACC,CAACoB,IACJ,MAAM3D,GAAaQ,EAAAA,EAAAA,GAAS,CAAC,EAAGV,EAAO,CACrCI,MAAOmE,EAAanE,MACpBC,UACAC,mBAEIqE,EAxIkBzE,KACxB,MAAM,SACJwC,EAAQ,MACRtC,EAAK,QACLC,EAAO,eACPC,EAAc,SACd0B,EAAQ,QACR2C,GACEzE,EACE0E,EAAQ,CACZzE,KAAM,CAAC,OAAQC,GAAS,QAASsC,GAAY,YAAapC,GAAkB,UAAWD,GAAW,UAAW2B,GAAY,aAErH6C,GAAkBC,EAAAA,EAAAA,GAAeF,EAAOzF,EAAyBwF,GACvE,OAAOjE,EAAAA,EAAAA,GAAS,CAAC,EAAGiE,EAASE,EAAgB,EA2H7BE,CAAkB/E,GAC5BgF,GAAYC,EAAAA,EAAAA,GAAWT,EAAab,GAC1C,IAAIK,EAIJ,OAHKhE,EAAM0C,WACTsB,OAA4BkB,IAAjBjB,EAA6BA,GAAgB,IAEtC1K,EAAAA,EAAAA,KAAK+K,EAAAA,EAAYa,SAAU,CAC7CxK,MAAO4J,EACPjL,UAAuBC,EAAAA,EAAAA,KAAKiG,GAAckB,EAAAA,EAAAA,GAAS,CACjDiD,IAAKqB,EACLjB,KAAMA,EACNC,SAAUA,EACVlI,UAAWA,EACXgI,uBAAuBsB,EAAAA,EAAAA,GAAKT,EAAQrC,aAAcwB,GAClDI,WAAWkB,EAAAA,EAAAA,GAAKT,EAAQxE,KAAM+D,IAC7BC,EAAO,CACRjE,WAAYA,EACZyE,QAASA,MAGf,G","sources":["pages/cividle/ScienceTimeCalc.jsx","utils/cividlehelpers.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Select, MenuItem, Grid, Typography, Paper, Box } from '@mui/material';\r\nimport { calculateScienceTime } from '../../utils/cividlehelpers';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\n\r\nconst ScienceTimeCalc = () => {\r\n  const [values, setValues] = useState(['', '', '']);\r\n  const [units, setUnits] = useState(['K', 'K', 'K']);\r\n  const [result, setResult] = useState(null);\r\n\r\n  const labels = [\"Science/sec\", \"Science Saved\", \"Science Needed\"];\r\n\r\n  const handleValueChange = (index, newValue) => {\r\n    const newValues = [...values];\r\n    newValues[index] = newValue;\r\n    setValues(newValues);\r\n    updateResult(newValues, units);\r\n  };\r\n\r\n  const handleUnitChange = (index, newUnit) => {\r\n    const newUnits = [...units];\r\n    newUnits[index] = newUnit;\r\n    setUnits(newUnits);\r\n    updateResult(values, newUnits);\r\n  };\r\n\r\n  const updateResult = (newValues, newUnits) => {\r\n    const calculatedResult = calculateScienceTime(newValues, newUnits);\r\n    setResult(calculatedResult);\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 3, maxWidth: 600, mx: 'auto' }}>\r\n      <Typography variant=\"h4\" gutterBottom>CivIdle Science Calculator</Typography>\r\n      <Box sx={{ mb: 3, bgcolor: 'background.paper', p: 2, borderRadius: 1 }}>\r\n        {[0, 1, 2].map((index) => (\r\n          <Grid container spacing={2} key={index} alignItems=\"center\" sx={{ mb: 2 }}>\r\n            <Grid item xs={12} sm={4}>\r\n              <Typography variant=\"subtitle1\" fontWeight=\"medium\">{labels[index]}</Typography>\r\n            </Grid>\r\n            <Grid item xs={8} sm={5}>\r\n              <TextField\r\n                type=\"number\"\r\n                value={values[index]}\r\n                onChange={(e) => handleValueChange(index, e.target.value)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                inputProps={{ step: 'any' }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} sm={3}>\r\n              <Select\r\n                value={units[index]}\r\n                onChange={(e) => handleUnitChange(index, e.target.value)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n              >\r\n                {['K', 'M', 'B', 'T', 'Q'].map((unit) => (\r\n                  <MenuItem key={unit} value={unit}>{unit}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Box>\r\n      <Box sx={{ bgcolor: 'primary.light', p: 2, borderRadius: 1, color: 'primary.contrastText' }}>\r\n        {result && !result.error ? (\r\n          <>\r\n            <Typography variant=\"h6\" gutterBottom>Results</Typography>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <AccessTimeIcon />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Typography>\r\n                  It will take <Box component=\"span\" sx={{ color: '#FF4136', fontWeight: 'bold' }}>{result.ticks}</Box> ticks\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Time: {result.timespan}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <Typography color=\"error\">\r\n            {result?.error || 'Enter values to calculate'}\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ScienceTimeCalc;","import eraData from '../data/eraData.json';\r\n\r\nexport const calculateScienceTime = (values, units) => {\r\n  const unitMultipliers = {\r\n    'K': 1e3,\r\n    'M': 1e6,\r\n    'B': 1e9,\r\n    'T': 1e12,\r\n    'Q': 1e15\r\n  };\r\n\r\n  const [sciencePerSec, scienceSaved, scienceNeeded] = values.map((value, index) => \r\n    parseFloat(value) * unitMultipliers[units[index]]\r\n  );\r\n\r\n  if (sciencePerSec <= 0 || isNaN(scienceSaved) || isNaN(scienceNeeded)) {\r\n    return { error: \"Invalid input. Please check your values.\" };\r\n  }\r\n\r\n  const timeInTicks = Math.max(0, Math.round((scienceNeeded - scienceSaved) / sciencePerSec));\r\n  \r\n  const timespan = formatTime(timeInTicks)\r\n\r\n  return {\r\n    ticks: timeInTicks,\r\n    timespan: timespan\r\n  };\r\n};\r\n\r\nexport const calculateGPEfficiency = (currentGP, setupTime, evPerSecond, evUnit) => {\r\n  const unitMultipliers = {\r\n    'K': 1e-3,\r\n    'M': 1,\r\n    'B': 1e3,\r\n    'T': 1e6,\r\n    'Q': 1e9\r\n  };\r\n\r\n  const evPerSecondInMillions = parseFloat(evPerSecond) * unitMultipliers[evUnit];\r\n  const setupTimeFloat = parseFloat(setupTime);\r\n\r\n  const lineChart1Data = [];\r\n  const lineChart2Data = [];\r\n  const debugData = [];\r\n\r\n  let peakEfficiencyX = 0;\r\n  let prevY1 = 0;\r\n\r\n  // Generate chart data for the full range\r\n  for (let x = 0; x <= 2000; x += 25) {\r\n    const baseCalculation = (64 * Math.pow(x, 3)) / evPerSecondInMillions / 3600;\r\n    const y1 = x / (baseCalculation + setupTimeFloat);\r\n    const y2 = baseCalculation + setupTimeFloat;\r\n\r\n    lineChart1Data.push({ x, y: y1 });\r\n    lineChart2Data.push({ x, y: y2 });\r\n\r\n    if (x % 200 === 0) {\r\n      debugData.push({ x, evPerSecondInMillions, baseCalculation, y1, y2 });\r\n    }\r\n\r\n    // Check for peak efficiency (only for x > 0 to avoid division by zero)\r\n    if (x > 0 && y1 < prevY1 && peakEfficiencyX === 0) {\r\n      peakEfficiencyX = x;\r\n    }\r\n\r\n    prevY1 = y1;\r\n  }\r\n\r\n  // Fine-tune the peak efficiency x value\r\n  if (peakEfficiencyX > 0) {\r\n\r\n    prevY1 = 0;\r\n    for (let x = (peakEfficiencyX - 25); x < peakEfficiencyX + 25; x++) {\r\n      const baseCalculation = (64 * Math.pow(x, 3)) / evPerSecondInMillions / 3600;\r\n      const y1 = x / (baseCalculation + setupTimeFloat);\r\n\r\n      if (y1 < prevY1) {\r\n        peakEfficiencyX = x - 1;\r\n        break;\r\n      }\r\n\r\n      prevY1 = y1;\r\n    }\r\n  }\r\n\r\n  return {\r\n    lineChart1Data,\r\n    lineChart2Data,\r\n    integerValue: peakEfficiencyX,\r\n    debugData,\r\n    inputValues: { currentGP, setupTime, evPerSecond, evUnit }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const getEraData = (sciencePerSec) => {\r\n  return eraData.slice(0, 20).map(era => {\r\n    const timeToReach = Math.ceil(era.EraCost / sciencePerSec);\r\n    return {\r\n      ...era,\r\n      TimeToReach: formatTime(timeToReach)\r\n    };\r\n  });\r\n};\r\n\r\nconst formatTime = (seconds) => {\r\n  const days = Math.floor(seconds / 86400);\r\n  const hours = Math.floor((seconds % 86400) / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  const remainingSeconds = seconds % 60;\r\n\r\n  const parts = [];\r\n\r\n  if (days > 0) parts.push(`${days}d`);\r\n  if (hours > 0) parts.push(`${hours}h`);\r\n  if (minutes > 0) parts.push(`${minutes}m`);\r\n  if (remainingSeconds > 0 || parts.length === 0) parts.push(`${remainingSeconds}s`);\r\n\r\n  return parts.join(' ');\r\n};\r\n\r\nexport const buildGraph = (buildings) => {\r\n  const graph = {};\r\n\r\n  // Initialize nodes\r\n  for (const building of buildings) {\r\n    graph[building.id] = { building, inEdges: [], outEdges: [] };\r\n  }\r\n\r\n  // Connect nodes\r\n  for (const [id, node] of Object.entries(graph)) {\r\n    for (const output in node.building.output) {\r\n      for (const [otherId, otherNode] of Object.entries(graph)) {\r\n        if (otherId !== id && output in otherNode.building.input) {\r\n          node.outEdges.push(otherId);\r\n          otherNode.inEdges.push(id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return graph;\r\n};\r\n\r\n\r\nexport const calculateResourceFlow = (graph, startNodeId, multipliers, globalBuff) => {\r\n  const flow = { ratios: {}, relevantBuildings: new Set(), requiredAmounts: {} };\r\n  const visited = new Set();\r\n\r\n  const dfs = (nodeId, requiredAmount = 1) => {\r\n    flow.relevantBuildings.add(nodeId);\r\n    \r\n    const node = graph[nodeId];\r\n    const nodeMultiplier = (multipliers[nodeId] || 1) + globalBuff;\r\n    \r\n    // Initialize or update the required amount for this node\r\n    flow.requiredAmounts[nodeId] = (flow.requiredAmounts[nodeId] || 0) + requiredAmount;\r\n    \r\n    // Only process inputs if we haven't visited this node or if we need more of its output\r\n    if (!visited.has(nodeId) || flow.requiredAmounts[nodeId] > flow.ratios[nodeId]) {\r\n      visited.add(nodeId);\r\n      \r\n      // Calculate the ratio for this node\r\n      const outputAmount = Object.values(node.building.output)[0] * nodeMultiplier;\r\n      flow.ratios[nodeId] = flow.requiredAmounts[nodeId] / outputAmount;\r\n\r\n      // Recurse through input edges\r\n      for (const [inputResource, inputAmount] of Object.entries(node.building.input)) {\r\n        for (const inNodeId of node.inEdges) {\r\n          const inNode = graph[inNodeId];\r\n          if (inputResource in inNode.building.output) {\r\n            const requiredInputAmount = inputAmount * flow.ratios[nodeId];\r\n            dfs(inNodeId, requiredInputAmount);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  dfs(startNodeId);\r\n  return flow;\r\n};\r\n\r\n/*\r\n\r\nexport const calculateResourceFlow = (graph, startNodeId, multipliers, globalBuff) => {\r\n  const flow = { ratios: {}, relevantBuildings: new Set() };\r\n  const visited = new Set();\r\n\r\n  const dfs = (nodeId, requiredAmount = 1) => {\r\n    if (visited.has(nodeId)) return;\r\n    visited.add(nodeId);\r\n    flow.relevantBuildings.add(nodeId);\r\n\r\n    const node = graph[nodeId];\r\n    const nodeMultiplier = (multipliers[nodeId] || 1) + globalBuff;\r\n    \r\n    // Calculate the ratio for this node\r\n    if (nodeId === startNodeId) {\r\n      flow.ratios[nodeId] = 1; // The selected building always has a ratio of 1\r\n    } else {\r\n      const outputAmount = Object.values(node.building.output)[0] * nodeMultiplier;\r\n      flow.ratios[nodeId] = requiredAmount / outputAmount;\r\n    }\r\n\r\n    // Recurse through input edges\r\n    for (const [inputResource, inputAmount] of Object.entries(node.building.input)) {\r\n      for (const inNodeId of node.inEdges) {\r\n        const inNode = graph[inNodeId];\r\n        if (inputResource in inNode.building.output) {\r\n          const requiredInputAmount = inputAmount * flow.ratios[nodeId];\r\n          dfs(inNodeId, requiredInputAmount);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  dfs(startNodeId);\r\n  return flow;\r\n};\r\n*/\r\nexport const processChainData = (flow, graph) => {\r\n  return Array.from(flow.relevantBuildings).map(buildingId => {\r\n    const building = graph[buildingId].building;\r\n    return {\r\n      id: buildingId,\r\n      name: building.name,\r\n      input: formatResourceObject(building.input),\r\n      output: formatResourceObject(building.output),\r\n      ratio: flow.ratios[buildingId],\r\n      requiredAmount: flow.requiredAmounts[buildingId]\r\n    };\r\n  }).sort((a, b) => a.name.localeCompare(b.name));\r\n};\r\n\r\nconst formatResourceObject = (obj) => {\r\n  return Object.entries(obj)\r\n    .map(([key, value]) => `${key}: ${value}`)\r\n    .join('\\n');\r\n};","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["ScienceTimeCalc","values","setValues","useState","units","setUnits","result","setResult","labels","updateResult","newValues","newUnits","calculatedResult","calculateScienceTime","_jsxs","Paper","elevation","sx","p","maxWidth","mx","children","_jsx","Typography","variant","gutterBottom","Box","mb","bgcolor","borderRadius","map","index","Grid","container","spacing","alignItems","item","xs","sm","fontWeight","TextField","type","value","onChange","e","handleValueChange","newValue","target","size","fullWidth","inputProps","step","Select","handleUnitChange","newUnit","unit","MenuItem","color","error","_Fragment","AccessTimeIcon","component","ticks","timespan","unitMultipliers","sciencePerSec","scienceSaved","scienceNeeded","parseFloat","isNaN","timeInTicks","Math","max","round","formatTime","calculateGPEfficiency","currentGP","setupTime","evPerSecond","evUnit","evPerSecondInMillions","setupTimeFloat","lineChart1Data","lineChart2Data","debugData","peakEfficiencyX","prevY1","x","baseCalculation","pow","y1","y2","push","y","integerValue","inputValues","getEraData","eraData","slice","era","timeToReach","ceil","EraCost","TimeToReach","seconds","days","floor","hours","minutes","remainingSeconds","parts","concat","length","join","getMenuItemUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","_ref","theme","_extends","typography","body1","display","justifyContent","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","palette","backgroundClip","backgroundColor","action","hover","menuItemClasses","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginTop","marginBottom","inset","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","fontSize","React","inProps","ref","useDefaultProps","autoFocus","focusVisibleClassName","role","tabIndex","tabIndexProp","className","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","Provider","clsx"],"sourceRoot":""}