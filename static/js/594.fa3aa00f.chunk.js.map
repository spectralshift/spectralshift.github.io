{"version":3,"file":"static/js/594.fa3aa00f.chunk.js","mappings":"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","sources":["pages/cividle/GPEfficient.js","utils/cividlehelpers.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { TextField, Select, MenuItem, Grid, Typography, Paper, Box, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ReferenceLine } from 'recharts';\r\nimport { calculateGPEfficiency } from '../../utils/cividlehelpers';\r\n\r\nconst GPEfficient = () => {\r\n  const [currentGP, setCurrentGP] = useState('');\r\n  const [setupTime, setSetupTime] = useState('');\r\n  const [evPerSecond, setEvPerSecond] = useState('');\r\n  const [evUnit, setEvUnit] = useState('K');\r\n  const [chartData, setChartData] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n   const updateChartData = useCallback(() => {\r\n    if (currentGP && setupTime && evPerSecond) {\r\n      try {\r\n        const result = calculateGPEfficiency(currentGP, setupTime, evPerSecond, evUnit);\r\n        setChartData(result);\r\n        setError('');\r\n      } catch (err) {\r\n        setError('Error in calculation. Please check your inputs.');\r\n      }\r\n    } else {\r\n      setChartData(null);\r\n      setError('');\r\n    }\r\n  }, [currentGP, setupTime, evPerSecond, evUnit]);\r\n\r\n  useEffect(() => {\r\n    updateChartData();\r\n  }, [updateChartData]);\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 3, maxWidth: 800, mx: 'auto' }}>\r\n      <Typography variant=\"h4\" gutterBottom>GP Efficiency Calculator</Typography>\r\n      <Box sx={{ mb: 3, bgcolor: 'background.paper', p: 2, borderRadius: 1 }}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12} sm={4}>\r\n            <Typography variant=\"subtitle1\" fontWeight=\"medium\">Current GP Count</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              type=\"number\"\r\n              value={currentGP}\r\n              onChange={(e) => setCurrentGP(e.target.value)}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              inputProps={{ step: 'any' }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" sx={{ mt: 1 }}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Typography variant=\"subtitle1\" fontWeight=\"medium\">Setup Time (hours)</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              type=\"number\"\r\n              value={setupTime}\r\n              onChange={(e) => setSetupTime(e.target.value)}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              inputProps={{ step: 'any' }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} alignItems=\"center\" sx={{ mt: 1 }}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Typography variant=\"subtitle1\" fontWeight=\"medium\">EV/second</Typography>\r\n          </Grid>\r\n          <Grid item xs={8} sm={5}>\r\n            <TextField\r\n              type=\"number\"\r\n              value={evPerSecond}\r\n              onChange={(e) => setEvPerSecond(e.target.value)}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              inputProps={{ step: 'any' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={3}>\r\n            <Select\r\n              value={evUnit}\r\n              onChange={(e) => setEvUnit(e.target.value)}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            >\r\n              {['K', 'M', 'B', 'T', 'Q'].map((unit) => (\r\n                <MenuItem key={unit} value={unit}>{unit}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n{error && (\r\n        <Box sx={{ mt: 2, color: 'error.main' }}>\r\n          <Typography>{error}</Typography>\r\n        </Box>\r\n      )}\r\n\t  \r\n      {chartData && (\r\n        <>\r\n\t\t          <Box sx={{ mt: 4 }}>\r\n            <Typography variant=\"h6\">Optimal GPs: <Box component=\"span\" sx={{ color: '#FF4136', fontWeight: 'bold' }}>{chartData.integerValue}</Box> </Typography>\r\n\t\t\t\r\n          </Box>\r\n<Box sx={{ mt: 4 }}>\r\n  <Typography variant=\"h6\" gutterBottom>Efficiency Chart</Typography>\r\n  <ResponsiveContainer width=\"100%\" height={300}>\r\n    <LineChart data={chartData.lineChart1Data}>\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"x\" type=\"number\" label={{ value: 'GP Count', position: 'insideBottom', offset: -5 }} />\r\n      <YAxis domain={['auto', 'auto']} label={{ value: 'GP/Hour', angle: -90, position: 'insideLeft' }} />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type=\"monotone\" dataKey=\"y\" name=\"Efficiency\" stroke=\"#8884d8\" dot={false} />\r\n      <ReferenceLine x={chartData.integerValue} stroke=\"red\" label=\"Peak\"/>\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n</Box>\r\n          \r\n<Box sx={{ mt: 4 }}>\r\n  <Typography variant=\"h6\" gutterBottom>Time to Reach GP Chart</Typography>\r\n  <ResponsiveContainer width=\"100%\" height={300}>\r\n    <LineChart data={chartData.lineChart2Data}>\r\n      <CartesianGrid \r\n        strokeDasharray=\"3 3\" \r\n        yAxis={{ ticks: [0, 24, 48, 72, 96, 120, 144, 168, 336, 504, 672, 840, 1008, 1176, 1344] }}\r\n      />\r\n      <XAxis \r\n        dataKey=\"x\" \r\n\t\ttype=\"number\"\r\n        label={{ value: 'GP Count', position: 'insideBottom', offset: -5 }}\r\n      />\r\n      <YAxis \r\n        domain={[0, 'auto']}\r\n        label={{ value: 'Hours', angle: -90, position: 'insideLeft' }}\r\n        /*ticks={[0, 168, 336, 504, 672, 840, 1008, 1176, 1344]}\r\n        tickFormatter={(value) => value.toString()}*/\r\n        allowDataOverflow={true}\r\n      />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type=\"monotone\" dataKey=\"y\" name=\"Time\" stroke=\"#82ca9d\" dot={false} />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n</Box>\r\n\t\t  \r\n\t\t  <Box sx={{ mt: 4 }}>\r\n            <Typography variant=\"h6\">Output Details</Typography>\r\n            <Typography variant=\"subtitle1\">Input Values:</Typography>\r\n            <Typography>\r\n              Current GP: {chartData.inputValues.currentGP},\r\n              Setup Time: {chartData.inputValues.setupTime},\r\n              EV/Second: {chartData.inputValues.evPerSecond},\r\n              EV Unit: {chartData.inputValues.evUnit}\r\n            </Typography>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>x</TableCell>\r\n                  <TableCell>EV/s (M)</TableCell>\r\n                  <TableCell>Base Calc</TableCell>\r\n                  <TableCell>Y1 (Efficiency)</TableCell>\r\n                  <TableCell>Y2 (Time)</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {chartData.debugData.map((row, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell>{row.x}</TableCell>\r\n                    <TableCell>{row.evPerSecondInMillions.toExponential(4)}</TableCell>\r\n                    <TableCell>{row.baseCalculation.toFixed(4)}</TableCell>\r\n                    <TableCell>{row.y1.toFixed(4)}</TableCell>\r\n                    <TableCell>{row.y2.toFixed(4)}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default GPEfficient;","import eraData from '../data/eraData.json';\r\n\r\nexport const calculateScienceTime = (values, units) => {\r\n  const unitMultipliers = {\r\n    'K': 1e3,\r\n    'M': 1e6,\r\n    'B': 1e9,\r\n    'T': 1e12,\r\n    'Q': 1e15\r\n  };\r\n\r\n  const [sciencePerSec, scienceSaved, scienceNeeded] = values.map((value, index) => \r\n    parseFloat(value) * unitMultipliers[units[index]]\r\n  );\r\n\r\n  if (sciencePerSec <= 0 || isNaN(scienceSaved) || isNaN(scienceNeeded)) {\r\n    return { error: \"Invalid input. Please check your values.\" };\r\n  }\r\n\r\n  const timeInTicks = Math.max(0, Math.round((scienceNeeded - scienceSaved) / sciencePerSec));\r\n  \r\n  const timespan = formatTime(timeInTicks)\r\n\r\n  return {\r\n    ticks: timeInTicks,\r\n    timespan: timespan\r\n  };\r\n};\r\n\r\nexport const calculateGPEfficiency = (currentGP, setupTime, evPerSecond, evUnit) => {\r\n  const unitMultipliers = {\r\n    'K': 1e-3,\r\n    'M': 1,\r\n    'B': 1e3,\r\n    'T': 1e6,\r\n    'Q': 1e9\r\n  };\r\n\r\n  const evPerSecondInMillions = parseFloat(evPerSecond) * unitMultipliers[evUnit];\r\n  const setupTimeFloat = parseFloat(setupTime);\r\n\r\n  const lineChart1Data = [];\r\n  const lineChart2Data = [];\r\n  const debugData = [];\r\n\r\n  let peakEfficiencyX = 0;\r\n  let prevY1 = 0;\r\n\r\n  // Generate chart data for the full range\r\n  for (let x = 0; x <= 2000; x += 25) {\r\n    const baseCalculation = (64 * Math.pow(x, 3)) / evPerSecondInMillions / 3600;\r\n    const y1 = x / (baseCalculation + setupTimeFloat);\r\n    const y2 = baseCalculation + setupTimeFloat;\r\n\r\n    lineChart1Data.push({ x, y: y1 });\r\n    lineChart2Data.push({ x, y: y2 });\r\n\r\n    if (x % 200 === 0) {\r\n      debugData.push({ x, evPerSecondInMillions, baseCalculation, y1, y2 });\r\n    }\r\n\r\n    // Check for peak efficiency (only for x > 0 to avoid division by zero)\r\n    if (x > 0 && y1 < prevY1 && peakEfficiencyX === 0) {\r\n      peakEfficiencyX = x;\r\n    }\r\n\r\n    prevY1 = y1;\r\n  }\r\n\r\n  // Fine-tune the peak efficiency x value\r\n  if (peakEfficiencyX > 0) {\r\n\r\n    prevY1 = 0;\r\n    for (let x = (peakEfficiencyX - 25); x < peakEfficiencyX + 25; x++) {\r\n      const baseCalculation = (64 * Math.pow(x, 3)) / evPerSecondInMillions / 3600;\r\n      const y1 = x / (baseCalculation + setupTimeFloat);\r\n\r\n      if (y1 < prevY1) {\r\n        peakEfficiencyX = x - 1;\r\n        break;\r\n      }\r\n\r\n      prevY1 = y1;\r\n    }\r\n  }\r\n\r\n  return {\r\n    lineChart1Data,\r\n    lineChart2Data,\r\n    integerValue: peakEfficiencyX,\r\n    debugData,\r\n    inputValues: { currentGP, setupTime, evPerSecond, evUnit }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const getEraData = (sciencePerSec) => {\r\n  return eraData.slice(0, 20).map(era => {\r\n    const timeToReach = Math.ceil(era.EraCost / sciencePerSec);\r\n    return {\r\n      ...era,\r\n      TimeToReach: formatTime(timeToReach)\r\n    };\r\n  });\r\n};\r\n\r\nconst formatTime = (seconds) => {\r\n  const days = Math.floor(seconds / 86400);\r\n  const hours = Math.floor((seconds % 86400) / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  const remainingSeconds = seconds % 60;\r\n\r\n  const parts = [];\r\n\r\n  if (days > 0) parts.push(`${days}d`);\r\n  if (hours > 0) parts.push(`${hours}h`);\r\n  if (minutes > 0) parts.push(`${minutes}m`);\r\n  if (remainingSeconds > 0 || parts.length === 0) parts.push(`${remainingSeconds}s`);\r\n\r\n  return parts.join(' ');\r\n};\r\n\r\nexport const buildGraph = (buildings) => {\r\n  const graph = {};\r\n\r\n  // Initialize nodes\r\n  for (const building of buildings) {\r\n    graph[building.id] = { building, inEdges: [], outEdges: [] };\r\n  }\r\n\r\n  // Connect nodes\r\n  for (const [id, node] of Object.entries(graph)) {\r\n    for (const output in node.building.output) {\r\n      for (const [otherId, otherNode] of Object.entries(graph)) {\r\n        if (otherId !== id && output in otherNode.building.input) {\r\n          node.outEdges.push(otherId);\r\n          otherNode.inEdges.push(id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return graph;\r\n};\r\n\r\n\r\nexport const calculateResourceFlow = (graph, startNodeId, multipliers, globalBuff) => {\r\n  const flow = { ratios: {}, relevantBuildings: new Set(), requiredAmounts: {} };\r\n  const visited = new Set();\r\n\r\n  const dfs = (nodeId, requiredAmount = 1) => {\r\n    flow.relevantBuildings.add(nodeId);\r\n    \r\n    const node = graph[nodeId];\r\n    const nodeMultiplier = (multipliers[nodeId] || 1) + globalBuff;\r\n    \r\n    // Initialize or update the required amount for this node\r\n    flow.requiredAmounts[nodeId] = (flow.requiredAmounts[nodeId] || 0) + requiredAmount;\r\n    \r\n    // Only process inputs if we haven't visited this node or if we need more of its output\r\n    if (!visited.has(nodeId) || flow.requiredAmounts[nodeId] > flow.ratios[nodeId]) {\r\n      visited.add(nodeId);\r\n      \r\n      // Calculate the ratio for this node\r\n      const outputAmount = Object.values(node.building.output)[0] * nodeMultiplier;\r\n      flow.ratios[nodeId] = flow.requiredAmounts[nodeId] / outputAmount;\r\n\r\n      // Recurse through input edges\r\n      for (const [inputResource, inputAmount] of Object.entries(node.building.input)) {\r\n        for (const inNodeId of node.inEdges) {\r\n          const inNode = graph[inNodeId];\r\n          if (inputResource in inNode.building.output) {\r\n            const requiredInputAmount = inputAmount * flow.ratios[nodeId];\r\n            dfs(inNodeId, requiredInputAmount);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  dfs(startNodeId);\r\n  return flow;\r\n};\r\n\r\n/*\r\n\r\nexport const calculateResourceFlow = (graph, startNodeId, multipliers, globalBuff) => {\r\n  const flow = { ratios: {}, relevantBuildings: new Set() };\r\n  const visited = new Set();\r\n\r\n  const dfs = (nodeId, requiredAmount = 1) => {\r\n    if (visited.has(nodeId)) return;\r\n    visited.add(nodeId);\r\n    flow.relevantBuildings.add(nodeId);\r\n\r\n    const node = graph[nodeId];\r\n    const nodeMultiplier = (multipliers[nodeId] || 1) + globalBuff;\r\n    \r\n    // Calculate the ratio for this node\r\n    if (nodeId === startNodeId) {\r\n      flow.ratios[nodeId] = 1; // The selected building always has a ratio of 1\r\n    } else {\r\n      const outputAmount = Object.values(node.building.output)[0] * nodeMultiplier;\r\n      flow.ratios[nodeId] = requiredAmount / outputAmount;\r\n    }\r\n\r\n    // Recurse through input edges\r\n    for (const [inputResource, inputAmount] of Object.entries(node.building.input)) {\r\n      for (const inNodeId of node.inEdges) {\r\n        const inNode = graph[inNodeId];\r\n        if (inputResource in inNode.building.output) {\r\n          const requiredInputAmount = inputAmount * flow.ratios[nodeId];\r\n          dfs(inNodeId, requiredInputAmount);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  dfs(startNodeId);\r\n  return flow;\r\n};\r\n*/\r\nexport const processChainData = (flow, graph) => {\r\n  return Array.from(flow.relevantBuildings).map(buildingId => {\r\n    const building = graph[buildingId].building;\r\n    return {\r\n      id: buildingId,\r\n      name: building.name,\r\n      input: formatResourceObject(building.input),\r\n      output: formatResourceObject(building.output),\r\n      ratio: flow.ratios[buildingId],\r\n      requiredAmount: flow.requiredAmounts[buildingId]\r\n    };\r\n  }).sort((a, b) => a.name.localeCompare(b.name));\r\n};\r\n\r\nconst formatResourceObject = (obj) => {\r\n  return Object.entries(obj)\r\n    .map(([key, value]) => `${key}: ${value}`)\r\n    .join('\\n');\r\n};","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["GPEfficient","currentGP","setCurrentGP","useState","setupTime","setSetupTime","evPerSecond","setEvPerSecond","evUnit","setEvUnit","chartData","setChartData","error","setError","updateChartData","useCallback","result","calculateGPEfficiency","err","useEffect","_jsxs","Paper","elevation","sx","p","maxWidth","mx","children","_jsx","Typography","variant","gutterBottom","Box","mb","bgcolor","borderRadius","Grid","container","spacing","alignItems","item","xs","sm","fontWeight","TextField","type","value","onChange","e","target","size","fullWidth","inputProps","step","mt","Select","map","unit","MenuItem","color","_Fragment","component","integerValue","ResponsiveContainer","width","height","LineChart","data","lineChart1Data","CartesianGrid","strokeDasharray","XAxis","dataKey","label","position","offset","YAxis","domain","angle","Tooltip","Legend","Line","name","stroke","dot","ReferenceLine","x","lineChart2Data","yAxis","ticks","allowDataOverflow","inputValues","Table","TableHead","TableRow","TableCell","TableBody","debugData","row","index","evPerSecondInMillions","toExponential","baseCalculation","toFixed","y1","y2","calculateScienceTime","values","units","unitMultipliers","sciencePerSec","scienceSaved","scienceNeeded","parseFloat","isNaN","timeInTicks","Math","max","round","timespan","formatTime","setupTimeFloat","peakEfficiencyX","prevY1","pow","push","y","getEraData","eraData","slice","era","timeToReach","ceil","EraCost","TimeToReach","seconds","days","floor","hours","minutes","remainingSeconds","parts","concat","length","join","getMenuItemUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","_ref","theme","_extends","typography","body1","display","justifyContent","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","palette","backgroundClip","backgroundColor","action","hover","menuItemClasses","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginTop","marginBottom","inset","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","fontSize","React","inProps","ref","useDefaultProps","autoFocus","focusVisibleClassName","role","tabIndex","tabIndexProp","className","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","Provider","clsx"],"sourceRoot":""}